// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/dec": {
            "get": {
                "description": "Read one dec",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dec"
                ],
                "summary": "Read one dec",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dec identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ReadDecResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update dec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dec"
                ],
                "summary": "Update dec",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateDecRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Dec identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateDecResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new dec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dec"
                ],
                "summary": "Create Dec",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDecRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateDecResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete dec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dec"
                ],
                "summary": "Delete dec",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dec identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteDecResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    }
                }
            }
        },
        "/decs": {
            "get": {
                "description": "List dec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dec"
                ],
                "summary": "List dec",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.ListDecResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorDecResponse"
                        }
                    }
                }
            }
        },
        "/flash-card": {
            "get": {
                "description": "Read Flash-card",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FlashCard"
                ],
                "summary": "Read Flash-card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Flash-card identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardReadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Flash-Card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FlashCard"
                ],
                "summary": "Update Flash-Card",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateFlashCardRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Flash-Card identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Flash-Card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FlashCard"
                ],
                "summary": "Create a Flash-Card",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateFlashCardRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Flash-Card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FlashCard"
                ],
                "summary": "Delete Flash-Card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Flash-Card identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.FlashCardErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Read User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Read User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UserReadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateUserRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UserUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.UserCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UserDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "List User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UserListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.UserErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CreateDecRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "handler.CreateDecResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.CreateDecResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.CreateDecResponseData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "handler.CreateFlashCardRequest": {
            "type": "object",
            "properties": {
                "back": {
                    "type": "string"
                },
                "decId": {
                    "type": "integer"
                },
                "front": {
                    "type": "string"
                }
            }
        },
        "handler.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                },
                "passConfirmation": {
                    "type": "string"
                }
            }
        },
        "handler.DecReadResponseData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "handler.DecUpdateResponseData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "handler.DeleteDecResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.DeleteDecResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.DeleteDecResponseData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "handler.ErrorDecResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.FlashCardCreateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.FlashCardListResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.FlashCardDeleteResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.FlashCardDeleteResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.FlashCardDeleteResponseData": {
            "type": "object",
            "properties": {
                "back": {
                    "type": "string"
                },
                "decId": {
                    "type": "integer"
                },
                "front": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.FlashCardErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.FlashCardListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.FlashCardListResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.FlashCardListResponseData": {
            "type": "object",
            "properties": {
                "back": {
                    "type": "string"
                },
                "decId": {
                    "type": "integer"
                },
                "front": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.FlashCardReadResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.FlashCardReadResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.FlashCardReadResponseData": {
            "type": "object",
            "properties": {
                "back": {
                    "type": "string"
                },
                "decId": {
                    "type": "integer"
                },
                "front": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.FlashCardUpdateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.FlashCardUpdateResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.FlashCardUpdateResponseData": {
            "type": "object",
            "properties": {
                "back": {
                    "type": "string"
                },
                "decId": {
                    "type": "integer"
                },
                "front": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.ListDecResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.ListDecResponseData"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.ListDecResponseData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "handler.ReadDecResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.DecReadResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateDecRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "handler.UpdateDecResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.DecUpdateResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateFlashCardRequest": {
            "type": "object",
            "properties": {
                "back": {
                    "type": "string"
                },
                "decId": {
                    "type": "integer"
                },
                "front": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                },
                "passConfirmation": {
                    "type": "string"
                }
            }
        },
        "handler.UserCreateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.UserCreateResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UserCreateResponseData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.UserDeleteResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.UserDeleteResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UserDeleteResponseData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.UserErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UserListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.UserListResponseData"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UserListResponseData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.UserReadResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.UserReadResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UserReadResponseData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.UserUpdateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.UserUpdateResponseData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.UserUpdateResponseData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
